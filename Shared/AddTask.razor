@using SmardenV3.Data
@inject IKanbanService KanbanService
@inject ProtectedSessionStorage ProtectedSessionStore
@inject IKanbanService KanbanService
@inject NavigationManager NavManager


@namespace SmardenV3.Shared.AddTask

<button class="e-btn" @onclick="ShowFormOnClick">Add New Card</button>
@if (show)
{
    <EditForm Model=@task class="form-group p-1">

    <label for="title-field">Enter Task Name</label>
    <input type="text" name="Title" id="title-field" class="form-control" placeholder="Title" @bind="task.Title" />
    <label for="status-field">Enter Status</label>
    <input type="text" name="Status" id="status-field" class="form-control" placeholder="Open" @bind="task.Status" />
    <label for="summary-field">Enter Task Name</label>
    <input type="text" name="Summary" id="summary-field" class="form-control" placeholder="Summary"
        @bind=task.Summary />
</EditForm>
    <button class="e-btn m-1" @onclick="PostTask">Submit</button>
    <button class="e-btn m-1" @onclick="CloseFormOnClick">Close</button>

}

@code {
    private IEnumerable<KanbanData> tasks = Array.Empty<KanbanData>();
    KanbanData task = new KanbanData { };
    UserData? currentUser;
    bool show = false;
    [Parameter]
    public EventCallback<MouseEventArgs> OnAddTaskCallback { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var result = await ProtectedSessionStore.GetAsync<UserData>("user");
        currentUser = result.Success ? result.Value : null;
        if (currentUser != null)
        {
            task.UserID = currentUser.UserID;
            task.Status = "Open";
        }
        else
        {
            NavManager.NavigateTo("/login");
        }
    }
    protected void ShowFormOnClick()
    {
        show = true;
    }
    protected void CloseFormOnClick()
    {
        show = false;
    }
    protected async Task PostTask(MouseEventArgs e)
    {
        if (task != null)
        {
            await KanbanService.PostKanban(task);
        }
        await OnAddTaskCallback.InvokeAsync();

    }
}