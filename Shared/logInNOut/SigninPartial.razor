@using SmardenV3.Data
@inject IUserService UserService
@inject ProtectedSessionStorage ProtectedSessionStore
@inject NavigationManager NavManager
@namespace SmardenV3.Shared.logInNOut.SigninPartial

@if (!loggedIn)
{
    <div id="login-error-msg-holder">
    <p id="login-error-msg">Invalid username <span id="error-msg-second-line">and/or password</span></p>
</div>
}

<div id="login-form">
    <input type="text" name="username" id="username-field" class="login-form-field" placeholder="Username"
        @bind="getUserInfo.UserName" />
    <input type="password" name="password" id="password-field" class="login-form-field" placeholder="Password"
        @bind="getUserInfo.Password" />
    <button @onclick="AttemptLogin">Login</button>
</div>
@if (loggedIn && user.Name != null)
{
    <p>successfuly logged in</p>
}

@* <p>@response.IsSuccessStatusCode : @user.CustomerName</p> *@
@* <p>user : @loggedInUser.Name</p> *@

@code {
    HttpResponseMessage? response;
    bool loggedIn = true;
    UserData? user = new UserData { };
    private LoginData getUserInfo = new LoginData { };
    @* UserData loggedInUser = new UserData { }; *@

    private async Task AttemptLogin()
    {
        response = await UserService.LoginUser(getUserInfo);
        user = await response.Content.ReadFromJsonAsync<UserData>();

        await ProtectedSessionStore.SetAsync("user", user);
        loggedIn = response.IsSuccessStatusCode;
        if (loggedIn)
        {
            NavManager.NavigateTo("/");
        }
    }

}