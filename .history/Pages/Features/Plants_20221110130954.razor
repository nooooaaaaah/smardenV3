@page "/plants"

@using System.Text.Json
@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Buttons
@using SmardenV3.Data

@inject IPlantService PlantService


@{
    var InitSearch = (new string[] { "PlantID", "Name" });
    var Tool = (new List<string>() { "Search" });
}


<h3 class="text-info">Plants</h3><br>

<SfButton OnClick="@(async () => _state = await Grid.GetPersistDataAsync())">Save State</SfButton>
<SfButton OnClick="@(() => Grid.SetPersistDataAsync(_state))">Set State</SfButton>
<SfButton OnClick="@(() => Grid.ResetPersistDataAsync())">Reset State</SfButton>

<SfGrid @ref="Grid" DataSource="@plants" AllowPaging="true" AllowSorting="true"
    Toolbar="@(new List<string>() { "Add", "Edit", "Delete", "Cancel", "Update", "Search" })">
    <GridSearchSettings Fields=@InitSearch Operator=Syncfusion.Blazor.Operator.Contains IgnoreCase="true">
    </GridSearchSettings>
    <GridEditSettings AllowEditing="true" AllowAdding="true" AllowDeleting="true"></GridEditSettings>
</SfGrid>



@code {
    SfGrid<PlantData> Grid;
    public string _state;

    private IEnumerable<PlantData> plants = Array.Empty<PlantData>();
    protected override async Task OnInitializedAsync()
    {
        plants = await PlantService.GetPlants();
    }
}