@page "/tasks"
@using Syncfusion.Blazor.Kanban
@using SmardenV3.Shared.AddTask
@using SmardenV3.Data
@inject IKanbanService KanbanService
@inject ProtectedSessionStorage ProtectedSessionStore
<div class="p-1">
    <AddTask />
</div>
<SfKanban TValue="KanbanData" KeyField="Status" DataSource="kanbans">
    <KanbanEvents TValue="KanbanData" ActionComplete="@ActionComplete"></KanbanEvents>
    <KanbanColumns>
        <KanbanColumn HeaderText="Backlog" KeyField="@(new List<string>() {"Open"})"></KanbanColumn>
        <KanbanColumn HeaderText="In Progress" KeyField="@(new List<string>() {"InProgress"})"></KanbanColumn>
        <KanbanColumn HeaderText="Done" KeyField="@(new List<string>() {"Close"})"></KanbanColumn>
    </KanbanColumns>
    <KanbanCardSettings HeaderField="Title" ContentField="Summary"></KanbanCardSettings>
    <KanbanSwimlaneSettings AllowDragAndDrop="true"></KanbanSwimlaneSettings>
</SfKanban>

@code {
    private IEnumerable<KanbanData> kanbans = Array.Empty<KanbanData>();
    protected override async Task OnInitializedAsync()
    {
        kanbans = await KanbanService.GetKanbans();
    }
    public void ActionComplete(ActionEventArgs<KanbanData> args)
    {
        Console.WriteLine("aflsdjksdfjklasdjklasdfkl");
        Console.WriteLine(args.RequestType);
        foreach (KanbanData record in args.ChangedRecords)
        {
            Console.WriteLine(record.Status);
        }
        if (args.RequestType == "cardChange")
        {
            KanbanService.EditKanban(args.ChangedRecords.SingleOrDefault());
        }
    }
    private void ShowAddCardDialog()
    {

    }
}
