@page "/calendar"
@using Syncfusion.Blazor.Schedule
@using SmardenV3.Data

@inject IEventService EventService


<PageTitle>Calendar</PageTitle>

@* help: https://blazor.syncfusion.com/documentation/scheduler/getting-started/ *@
<div class=" d-md-block">
    <SfSchedule TValue="EventData">
        <ScheduleEvents TValue="EventData" ActionCompleted="OnActionCompleted"></ScheduleEvents>
        <ScheduleEventSettings DataSource="@events"></ScheduleEventSettings>
        <ScheduleViews>
            <ScheduleView Option="View.Day"></ScheduleView>
            <ScheduleView Option="View.Week"></ScheduleView>
            <ScheduleView Option="View.WorkWeek"></ScheduleView>
            <ScheduleView Option="View.Month"></ScheduleView>
            <ScheduleView Option="View.Agenda"></ScheduleView>
        </ScheduleViews>
    </SfSchedule>
</div>

@code {
    private IEnumerable<EventData> events = Array.Empty<EventData>();
    UserData? loggedInUser = new UserData() { };

    protected override async Task OnInitializedAsync()
    {
        var result = await ProtectedSessionStore.GetAsync<UserData>("user");
        loggedInUser = result.Success ? result.Value : null;
        if (loggedInUser != null)
        {
            events = await EventService.GetUsersEvents(loggedInUser.UserID);
        }
    }
    public void OnActionCompleted(ActionEventArgs<EventData> args)
    {
        Console.WriteLine(args.ActionType);
        if (args.ActionType == ActionType.EventCreate)
        {
            args.AddedRecords.SingleOrDefault()!.UserID = loggedInUser!.UserID;
            Console.WriteLine("Create");
            EventService.PostEvent(args.AddedRecords.SingleOrDefault()!);
        }
        if (args.ActionType == ActionType.EventChange)
        {
            Console.WriteLine("Change");
            EventService.EditEvent(args.ChangedRecords.SingleOrDefault()!);
        }
        if (args.ActionType == ActionType.EventRemove)
        {
            Console.WriteLine("Remove");
            EventService.DeleteEvent(args.DeletedRecords.SingleOrDefault()!.EventId);
        }

    }

}
