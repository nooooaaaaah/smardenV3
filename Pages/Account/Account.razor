@page "/account"

@using SmardenV3.Data

@inject NavigationManager NavManager
@inject IUserService UserService
@inject ProtectedSessionStorage ProtectedSessionStore
<div class="container mt-5">
    <h1>Account Management</h1>
    <div class="row mt-4">
        <div class="col-12 col-md-6 mx-auto">
            @if (loggedInUser == null)
            {
                <p>User not found.</p>
            }
            else
            {
                <h4>Edit User Information</h4>

                <form>
                    <label for="name-field">Name</label>
                    <input type="text" name="name" id="name-field" class="form-control" @bind="loggedInUser.Name" />
                    <label for="customer-name-field">Customer Name</label>
                    <input type="text" name="customerName" id="customer-name-field" class="form-control"
                    @bind="loggedInUser.CustomerName" />
                    <label for="customer-address-field">Customer Address</label>
                    <input type="text" name="customerAddress" id="customer-address-field" class="form-control"
                    @bind="loggedInUser.CustomerAddress" />
                    <button class="btn-warning btn mt-2" @onclick="EditAccountOnClick">Save Changes</button>
                </form>

                <div class="mt-4 change-password">
                    <h5>Change Password</h5>
                    <label for="old-password-field">Old Password</label>
                    <input type="password" name="oldPassword" id="old-password-field" class="form-control"
                    @bind="oldPassword" />
                    <label for="new-password-field">New Password</label>
                    <input type="password" name="newPassword" id="new-password-field" class="form-control"
                    @bind="newPassword" />
                    <button class="btn-warning btn mt-2" @onclick="ChangePasswordOnClick">Change Password</button>
                </div>

                <div class="mt-4 delete-account">
                    <h5>Delete Account</h5>
                    <b>Are you sure you want to delete your account? This action cannot be undone.</b> <br>
                    <button class="btn-warning btn mt-2" @onclick="DeleteAccountOnClick">Delete Account</button>
                </div>
            }
        </div>
    </div>
</div>
@code {
    private string? oldPassword;
    private string? newPassword;
    UserData? loggedInUser = new UserData() { };
    protected override async Task OnInitializedAsync()
    {
        var result = await ProtectedSessionStore.GetAsync<UserData>("user");
        loggedInUser = result.Success ? result.Value : null;
        if (loggedInUser == null)
        {
            NavManager.NavigateTo("/login");
        }
    }

    private async void EditAccountOnClick()
    {
        // TODO: Implement code to edit the user's account
        if (loggedInUser != null)
        {
            Console.WriteLine(loggedInUser.CustomerAddress);
            await UserService.EditUser(loggedInUser);
        }
    }


    private async Task ChangePasswordOnClick()
    {
        // TODO Implement code to change the user's password
        if (oldPassword != newPassword && newPassword != null && loggedInUser != null)
        {
            await UserService.EditUserPassword(loggedInUser.UserID, newPassword);
            // TODO: Implement code to change the user's password
        }
    }

    private async Task DeleteAccountOnClick()
    {
        await UserService.DeleteUser(loggedInUser!);
        NavManager.NavigateTo("/");
        // TODO: Implement code to delete the user's account
    }
}
